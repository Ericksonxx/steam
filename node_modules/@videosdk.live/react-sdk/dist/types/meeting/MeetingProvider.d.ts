export default MeetingProvider;
/**
 *
 * @param {{
 *  children:any,
 *  config:{
 *    meetingId: string,
 *    autoConsume?: boolean,
 *    preferredProtocol?:"UDP_ONLY" | "UDP_OVER_TCP",
 *    participantId?:string | undefined,
 *    name:string,
 *    micEnabled:boolean,
 *    webcamEnabled:boolean,
 *    maxResolution?:"hd" | "sd",
 *    customCameraVideoTrack?: MediaStream | undefined
 *    customMicrophoneAudioTrack?: MediaStream | undefined,
 *    multiStream?: boolean,
 *    mode?: "CONFERENCE" | "VIEWER",
 * },
 *  token: string,
 *  joinWithoutUserInteraction?: boolean,
 *  reinitialiseMeetingOnConfigChange?: boolean,
 *  deviceInfo?: object
 * }}
 *
 */
declare function MeetingProvider({ children, config, token, joinWithoutUserInteraction, reinitialiseMeetingOnConfigChange: _reinitialiseMeetingOnConfigChange, deviceInfo }: {
    children: any;
    config: {
        meetingId: string;
        autoConsume?: boolean;
        preferredProtocol?: "UDP_ONLY" | "UDP_OVER_TCP";
        participantId?: string | undefined;
        name: string;
        micEnabled: boolean;
        webcamEnabled: boolean;
        maxResolution?: "hd" | "sd";
        customCameraVideoTrack?: MediaStream | undefined;
        customMicrophoneAudioTrack?: MediaStream | undefined;
        multiStream?: boolean;
        mode?: "CONFERENCE" | "VIEWER";
    };
    token: string;
    joinWithoutUserInteraction?: boolean;
    reinitialiseMeetingOnConfigChange?: boolean;
    deviceInfo?: object;
}): any;
//# sourceMappingURL=MeetingProvider.d.ts.map