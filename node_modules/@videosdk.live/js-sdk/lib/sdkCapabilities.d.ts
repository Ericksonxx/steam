export function computeVideoEncodings(isScreenShare: any, width: any, height: any, options: any): any[];
export function determineAppropriateEncoding(isScreenShare: any, width: any, height: any): any;
export function presetsForResolution(isScreenShare: any, width: any, height: any): any[];
export function defaultSimulcastLayers(isScreenShare: any, original: any): any[];
/** @internal */
export function sortPresets(presets: any): any;
/** @internal */
export function getAdaptivePrefferedLayers(consumer: any, viewportWidth: any, viewportHeight: any): {
    consumerId?: undefined;
    newPreferredSpatialLayer?: undefined;
    newPreferredTemporalLayer?: undefined;
} | {
    consumerId: any;
    newPreferredSpatialLayer: number;
    newPreferredTemporalLayer: number;
};
export const presets169: any[];
export const presets43: any[];
export const presetsScreenShare: any[];
export const defaultSimulcastPresets169: any[];
export const defaultSimulcastPresets43: any[];
export function computeDefaultScreenShareSimulcastPresets(fromPreset: any): {
    width: number;
    height: number;
    encodings: {
        maxBitrate: number;
        maxFramerate: number;
    };
}[];
//# sourceMappingURL=sdkCapabilities.d.ts.map